{"version":3,"file":"static/webpack/static/development/pages/calc.js.83f6d2e8c2dd2659d5c2.hot-update.js","sources":["webpack:///./components/Calculator.js"],"sourcesContent":["import { digits, operators } from '../data/digitsAndOperators'\n\nclass Calculator extends React.Component {\n    state = {\n        res: \"\"\n    }\n    onDigit = (digit) => {\n        const lastValue = this.state.res.charAt(this.state.res.length - 1);\n        if (this.state.res.length == 0 && digit == \".\") {\n            return false;\n        } else {\n            if (lastValue != \".\" || digit != \".\") {\n                const expression = this.state.res + digit;\n                this.setState({\n                    res: expression\n                })\n            }\n        }\n    }\n\n    onOperator = (digit) => {\n        if (this.state.res != \"\") {\n            const lastValue = this.state.res.charAt(this.state.res.length - 1);\n            if (!isNaN(lastValue)) {\n                const expression = this.state.res + digit;\n                this.setState({\n                    res: expression\n                })\n            }\n        }\n    }\n    executeOperation = () => {\n        const results = eval(this.state.res).toFixed(8);\n        this.setState({\n            res: results\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"z-depth-2 light-blue lighten-2 white-text center-align results\">\n                    {this.state.res || \"0\"}\n                </div>\n                <div className=\"calc-container blue lighten-3 hoverable z-depth-2\">\n                    {\n                        digits.map(digit => {\n                            return (\n                                <a className=\"waves-effect waves-light btn\" onClick={() => this.onDigit(digit)}>{digit}</a>\n                            )\n                        })\n                    }\n                    <div className=\"operators center-align\">\n                        {\n                            operators.map(digit => {\n                                return (\n                                    <a className=\"waves-effect waves-light btn deep-orange darken-1\" onClick={() => this.onOperator(digit)}>{digit}</a>\n                                )\n                            })\n                        }\n                        <a className=\"waves-effect waves-light btn deep-orange darken-1\" onClick={() => this.setState({ res: \"\" })}>C</a>\n                    </div>\n                    <a className=\"waves-effect waves-light btn deep-orange darken-1\" onClick={this.executeOperation}>=</a>\n                </div>\n                <style jsx>{\n                    `\n    .results{\n            width: 300px;\n            margin: 0 auto;\n            font-size: 32px;\n            margin-bottom: 10px;\n        }\n        .calc-container{\n            width: 300px;\n            margin: 0 auto;\n            text-align: center;\n            padding 12px;\n        }\n        .calc-container a{\n            margin: 5px;\n            padding: 0px 30px 0px 30px;\n        }\n        .operators{\n            border: 1px solid #ccc;\n            padding: 10px;\n            margin-top: 20px;\n        }\n                `\n                }</style>\n            </div>\n        )\n    }\n}\n\nexport default Calculator;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AAmDA;;;;AAzFA;AACA;AA2FA;;;;A","sourceRoot":""}